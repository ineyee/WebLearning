.nav__bg {
  position: absolute;
  top: 42px;
  right: 0px;
  left: 0px;
  z-index: -1;

  min-width: 1300px;
}

.nav__bg>img {
  width: 100%;
}

.nav {
  position: absolute;
  top: 42px;
  right: 0px;
  left: 0px;

  min-width: 1300px;
  height: 84px;

  background-color: #000000;

  display: flex;
  justify-content: center;

  opacity: 0.8;
}

.nav__content {
  width: 1300px;

  display: flex;
  align-items: center;
}

/*
  本来一个a元素搞定的事，为了做SEO优化，我们在外面包了一层h1元素
  但是我们不能直接把nav__content__honor_of_kings这个类给a元素，否则无论a元素设置多宽多高，都会因为h1元素被挤压地很小
*/
.nav__content__honor_of_kings {
  display: flex;
}

.nav__content__honor_of_kings>a {
  width: 200px;
  height: 54px;

  background-image: url("../../img/honor_of_kings.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;

  /* 我们通常用这种方式来偏移走不需要用户看到的文本，但是又能保留下来让搜索引擎做SEO优化 */
  text-indent: -9999px;
}

.nav__content__nav_list {
  width: 890px;
  margin-left: 28px;

  display: flex;
  align-self: stretch;
}

/*
  ul里的li纯粹就是个中间的过渡壳子、因为ul的子元素只能是li，a元素才是item的本质
  所以我们通常的做法就是给li壳子取个类名，a元素再取类名的话就重复了、因此a元素会直接用元素选择器
*/
.nav__content__nav_list__item {
  /* 仅仅为了把a元素变成flex item、从而能设置大小，其它的东西都交给a元素自己去设置、因为a元素才是本质、li只是个壳子 */
  display: flex;
}

.nav__content__nav_list__item>a {
  width: 110px;
  height: 64px;
  padding-top: 20px;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.nav__content__nav_list__item>a>.zh_desc {
  font-size: 18px;
  color: #c9c9dd;
}

.nav__content__nav_list__item>a>.en_desc {
  height: 16px;
  padding-top: 5px;

  font-size: 12px;
  color: #858792;
}

/*
  处理一下hover状态，注意：
  这里的”a:hover>.zh_desc“代表a元素处于hover状态时、zh_desc的行为
  而”a>.zh_desc:hover“代表zh_desc本身处于hover状态时、zh_desc的行为
  两者是不一样的，这里我们需要的是前者的效果
*/
.nav__content__nav_list__item>a:hover {
  background: url('../../img/index.png') no-repeat 0px 0px;
}

.nav__content__nav_list__item>a:hover>.zh_desc {
  color: #91763f;
}

.nav__content__nav_list__item>a:hover>.en_desc {
  color: #91763f;
}

.nav__content__login {
  width: 182px;
  height: 45px;

  display: flex;
  align-items: center;
}

.nav__content__login__avatar {
  box-sizing: border-box;

  width: 44px;
  height: 44px;
  border: 1px #d9ad50 solid;
  margin-right: 7px;
  border-radius: 50%;

  background-image: url("../../img/avatar_placeholder.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
}

.nav__content__login__info {
  width: 130px;
  height: 45px;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.nav__content__login__info__username {
  font-size: 14px;
  color: #ffffff;
}

.nav__content__login__info__history {
  height: 21px;

  font-size: 14px;
  color: #858792;
}

.nav__drop_menu {
  position: absolute;
  top: 83px;
  left: 0;

  width: 100%;
  height: 0px;

  background-color: rgba(0, 0, 0, 0.7);

  transition-property: all;
  transition-duration: 400ms;
  transition-timing-function: ease-in-out;
  transition-delay: 0s;

  display: flex;
  justify-content: center;
  align-items: center;

  /* 高度为0时，内容默认是会显示的，这里隐藏掉 */
  overflow: hidden;
}

.nav:hover>.nav__drop_menu {
  height: 285px;
}

.nav__drop_menu__content {
  width: 890px;
  height: 240px;
  padding: 15px 0 30px 50px;

  display: flex;
}

.nav__drop_menu__content__list {
  width: 110px;
  padding-top: 2px;
}

/*
  ul里的li纯粹就是个中间的过渡壳子、因为ul的子元素只能是li，a元素才是item的本质
  所以我们通常的做法就是给li壳子取个类名，a元素再取类名的话就重复了、因此a元素会直接用元素选择器
*/
.nav__drop_menu__content__item {
  /* 仅仅为了把a元素变成flex item、从而能设置大小，其它的东西都交给a元素自己去设置、因为a元素才是本质、li只是个壳子 */
  display: flex;
}

.nav__drop_menu__content__item>a {
  width: 100%;
  height: 30px;

  color: #c9c9dd;
  text-align: center;
  line-height: 30px;
}

.nav__drop_menu__content__item:hover>a {
  color: #f3c258;
  text-decoration: underline;
}