/*
  1、变量是什么
  变量是指第一次赋值后还能再次赋值的量，它由var或let、变量名、数据类型、变量值四大部分组成：
  var 变量名: 数据类型 = 变量值;
  let 变量名: 数据类型 = 变量值;

  * var或let：var是variable的缩写、let是let it be的缩写，用来表明要定义一个变量
  * 变量名：拿到变量名就是拿到了变量所对应的内存里的值
  * 变量值：就是存储在变量所对应的内存里的值

  注意：
  * TS里var或let和function关键字一样，只是用来表明要定义一个变量和函数，不需要指定变量的数据类型和函数的类型，因此从这个角度来看，不指定类型反而是统一的
  * let是ES6推出的、用来定义变量的关键字，它规避了很多var存在的历史遗留问题————变量会添加到window对象里、作用域提升、没有块级作用域等，总之以后定义变量就用let好了
*/

/*
  2、变量的声明

  let 变量名:数据类型;
  let i: number;
*/

/*
  3、变量的赋值

  变量名 = 变量值;
  i = 10;
*/

/*
  4、变量的读取

  拿到变量名就是拿到了变量所对应的内存里的值
  console.log(i);
*/

/*
  5、变量的初始化
  变量的第一次赋值叫做初始化，第一次之外的赋值就是普通赋值

  let i: number;
  i = 10; // 初始化
  i = 20; // 普通赋值
*/

/*
  6、变量的声明及初始化
  变量在未被初始化之前，它里面存储的值是以前使用过的垃圾值，因此变量在使用之前必须初始化，避免因为垃圾值带来未知的错误（尽管有的编译器会自动帮我们初始化一个默认值，但还是建议手动初始化，现在很多语言在编译层面已经要求我们必须手动初始化变量，最好就是在声明变量的时候就进行初始化，如果这个阶段实在不行、那就延迟初始化、但作为开发者你一定要保证这个变量在使用之前被初始化掉）

  这种写法是错误的，i的值是undefined
  let i1: number;
  console.log(i1) // undefined

  变量的声明及初始化
  let i2: number = 10;
  console.log(i2) // 10

  变量的声明及延迟初始化
  let i3: number;
  i3 = 10;
  console.log(i3) // 10
*/

/*
  7、变量的本质
  变量其实是高级语言里才有的概念，为的就是方便我们开发者通过变量来操作内存。汇编里没有变量的概念，就是在通过指令操作立即数、寄存器和内存。高级语言里的变量其实就对应汇编里的内存。

  因此变量的本质就是一块内存，操作变量就是在操作内存，比如声明一个变量的本质就是在开辟一块内存，初始化一个变量的本质就是在第一次往这块内存里写数据，给一个变量赋值的本质就是在修改这块内存里的数据，读取一个变量的值的本质就是在把数据从这块内存里给读出来，获取一个变量的地址的本质就是在获取这块内存的首地址。
*/
