<!--02_小程序组件语法/pages/01_mustache插值语法/01_mustache插值语法.wxml-->
<!--
	小程序里的 mustache 插值语法 = 1、Vue 里的 mustache 插值语法 + 2、Vue 里的 v-bind + 3、结合 wx-if、wx-for 一起使用
-->
<!--
	作用1：

	当元素的内容是写死的数据或其它子元素时，我们可以直接给元素插入内容
  但当元素的内容是 JS data 里的数据时，我们就得通过 mustache 插值语法 {{}} 来给元素插入内容
-->
<view>写死的数据</view>
<view>
	<text>子元素</text>
</view>
<view>{{ counter }}</view>

<!--
	作用2.1：将组件属性（自带属性和自定义属性）的值解析为原类型，而非总是被视作字符串

	我们前面学习的数据类型有：
	1、基本数据类型：布尔类型、数值类型、字符串类型
	2、对象数据类型：数组、对象、函数
	3、特殊数据类型：undefined、null

	在小程序开发里，虽然小程序框架会自动尝试帮我们把属性的值解析为原类型、而不总是视作字符串，但有些场景下并不总是能解析正确，还是得自己写，所以索性我们总是自己写好了
-->
<view hidden="{{ false }}">不隐藏</view>

<!--
	作用2.2：给组件属性的值（自带属性和自定义属性）使用 JS data 里的数据，而非写死数据

	实际开发中组件属性的值总不可能全部都是写死在界面里的，很多都是要动态使用 JS data 里的数据
-->
<image src="{{ imageUrl }}" mode=""/>

<!--
	作用3：结合 wx-if、wx-for 一起使用
	否则 wx-if、wx-for 的也会被视作字符串对待，这个详见后面的 wx-if、wx-for
-->