// 为什么需要用webpack搭建开发服务器？
// 
// 回想一下前面我们是如何做开发的？
// 1、开发JS、CSS，提供一个模板HTML
// 2、执行“npm run build”命令使用webpack来打包
// 3、使用live-server把打包出来的.html文件运行在浏览器上看到效果
// 4、一旦我们对代码进行了修改，那就需要重新执行2 + 3，这样的开发效率无疑很低
// 
// 如果我们能有一种方式，在修改了代码之后，能实时地显示在浏览器里让我们看到效果，【类似于Flutter里的热重启或热更新】，那无疑将大大提升我们的开发效率
// webpack-dev-server就是干这个事的，它为我们搭建了一个开发服务器，主要做了两件事：
// 当我们修改代码后实时打包 + 实时刷新浏览器呈现修改
// 注意webpack-dev-server的“实时打包”并非“真正地”打包，它不会产出可以部署到服务器的产物，而只是把打包的东西放在项目内存中，方便我们开发过程中中快速频繁地打包并访问
// 而当我们最终要上线时再去执行“npm run build”命令来真正打出可以部署到服务器的产物

// 第一步：给项目安装webpack-dev-server
// cd到项目根目录下，执行”npm install webpack-dev-server -D“
// webpack-dev-server就会被安装到项目的node_modules文件夹下了

// 第二步：给项目配置webpack-dev-server
// webpack-dev-server需要三到四处配置：
// 1、在webpack.config.js里将模式配置为“development”，因为webpack-dev-server只应用在开发环境下
// 2、在package.json里添加一条脚本【"serve": "webpack serve"】，serve是server的动词形式
// 3、需要提供一个HTML模版，以便能将webpack打包好的JS文件注入到其中展示
// 4、在main文件里指定哪些模块需要做热更新，不指定的话，修改任意模块里的内容都是完整刷新整个网页——【类似于Flutter里的热重启】、效率可能会有点低，而比如我们开发哪个模块就指定哪个模块之后就是只刷新这个模块了——【类似于Flutter里的热更新】。那我们可能就有一个疑惑，我们项目里有那么多模块，难道每个模块都得在main文件里配置这么一遍吗？其实不需要，因为我们实际开发中无论是开发Vue还是React，这些框架已经帮我们做了这件事，也就是说我们只需要做前三处配置就可以了，这些框架默认就是【热更新】，只不过用原生开发的话默认是【热重启】

// 第三步：使用webpack-dev-server在开发期间实时运行项目
// cd到项目根目录下，执行“npm run serve”即可
// 等打包成功后，终端会给到我们一个地址如：http://localhost:8081/，在浏览器里打开这个地址就能看到我们开发的东西了
// 这样我们在开发期间如果对项目进行了修改，webpack-dev-server就会实时打包 + 实时刷新浏览器呈现修改了